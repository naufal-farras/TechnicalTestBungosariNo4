@using TechnicalTestBungosariNo4.Models;
@using Microsoft.EntityFrameworkCore;
@inject InventoryContext _context;

@{
	ViewData["Title"] = "Inventory Page";
	int noRow = 0;
	var Data = _context.T_Transaksi.Include(x => x.inventoryItem).Where(x => x.isDeleted == false).ToList().GroupBy(x => x.inventoryItem.Id).ToList();
}

<div class="row pt-3">
	<div class="col-sm-12">
		<div class="card">
			<div class="card-header p-2">
				<div class="d-flex justify-content-between">

					<div class="card-title">STOK </div>
					<button type="button" id="tambah-inven" class="btn btn-success" data-toggle="modal" data-target="#exampleModal">
						<i class="fas fa-plus-circle mr-1"></i>Tambah Produk
					</button>
				</div>
			</div>
			<div class="card-body">
				<table class="table table-striped table-hover table-bordered" id="t-inventory">
					<thead>
						<tr>
							<th>No</th>
							<th>Nama Produk</th>
							<th>Harga</th>
							<th>QTY</th>
							<th>Aksi</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Data)
						{
							foreach (Transaksi item2 in item)
							{
								noRow++;
								<tr>
									<td>@noRow</td>
									<td>@item2.inventoryItem.NamaProduk</td>
									<td>Rp. @item2.inventoryItem.Harga.ToString("#,##0")</td>
									<td>@item2.QTY</td>
									<td>
										<button onclick="inBond(@item2.Id)" data-toggle="modal" data-target="#exampleModalin" class="btn btn-primary btn-sm">INBOND</button>
										<button onclick="outBond(@item2.Id)" data-toggle="modal" data-target="#exampleModalout" class="btn btn-warning btn-sm">OUTBOND</button>
										<button type="button" onclick="Delete(@item2.Id)" class="btn btn-danger btn-sm">DELETED</button>
									</td>
								</tr>
							}

                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="row-mt-3">
            <div class="card">
                <div class="card-header">
                    <h4>Report</h4>
                </div>
                <div class="card-body">
                    <div class="row justify-content-center">
                        <div class="col-lg-6">
                            <div class="form-group row">
                                <label class="col-sm-3 col-form-label">Periode</label>
                                <div class="col-sm-9">
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">
                                                <i class="far fa-calendar-alt"></i>
                                            </span>
                                        </div>
                                        <input type="text" onchange="OnChangeDate()" class="form-control float-right" id="reservation" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 mb-2">
                                <a id="downloadrekap" href="#" class="btn btn-danger"><i class="far fa-file-pdf"></i> Download</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Modal-->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<form id="formAddProduk">
				<div class="modal-content">
					<div class="modal-header">
						<h4 class="modal-title">Tambah Produk</h4>
						<button class="close" type="button" data-dismiss="modal"
								aria-label="Close" onclick="ClearForm()">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<div class="form-group">
							<label for="nama">Nama</label>
							<input type="text" class="form-control" id="namaProduk" placeholder="Nama Produk" />
						</div>
						<div class="form-group">
							<label for="harga">Harga</label>
							<input type="text" placeholder="Harga" id="Harga" class="form-control">
						</div>
						<div class="form-group">
							<label for="qty">QTY</label>
							<input type="number" placeholder="Qty" id="Qty" class="form-control">
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
						<button type="submit" class="btn btn-primary">Save</button>
					</div>
				</div>
			</form>
		</div>
	</div>
</div>


<!--Modal-->
<div class="modal fade" id="exampleModalin" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<form id="formIn">
				<div class="modal-content">
					<div class="modal-header">
						<h4 class="modal-title">inBound Produk</h4>
						<button class="close" type="button" data-dismiss="modal"
								aria-label="Close" onclick="ClearForm()">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<div class="form-group">
							<label for="nama">Nama</label>
							<input type="hidden" class="form-control" id="idin" />
							<input type="hidden" class="form-control" id="inventId" />

							<input type="text" class="form-control" id="namaProduk" placeholder="Nama Produk" />
						</div>
						<div class="form-group">
							<label for="harga">Harga</label>
							<input type="text" placeholder="Harga" id="Harga" class="form-control">
						</div>
						<div class="form-group">
							<label for="qty">QTY</label>
							<input type="number" placeholder="Qty" id="Qty" class="form-control">
						</div>
						<div class="form-group">
							<label for="qty">InBoundDate</label>
							<input type="datetime-local" placeholder="dateInBound" id="dateInBound" class="form-control">
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
						<button type="submit" class="btn btn-primary">Save</button>
					</div>
				</div>
			</form>
		</div>
	</div>
</div>


<!--Modal-->
<div class="modal fade" id="exampleModalout" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<form id="formOut">
				<div class="modal-content">
					<div class="modal-header">
						<h4 class="modal-title">Tambah Produk</h4>
						<button class="close" type="button" data-dismiss="modal"
								aria-label="Close" onclick="ClearForm()">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<div class="form-group">
							<label for="nama">Nama</label>
							<input type="text" class="form-control" id="namaProduk" placeholder="Nama Produk" />
							<input type="hidden" class="form-control" id="idout" />
							<input type="hidden" class="form-control" id="inventIdout" />
						</div>
						<div class="form-group">
							<label for="harga">Harga</label>
							<input type="text" placeholder="Harga" id="Harga" class="form-control">
						</div>
						<div class="form-group">
							<label for="qty">QTY</label>
							<input type="number" placeholder="Qty" id="Qty" class="form-control">
						</div>
						<div class="form-group">
							<label for="dateoutBound">outBoundDate</label>
							<input type="datetime-local" placeholder="dateoutBound" id="dateoutBound" class="form-control">
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
						<button type="submit" class="btn btn-primary">Save</button>
					</div>
				</div>
			</form>
		</div>
	</div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#reservation").daterangepicker();
        })

        function OnChangeDate() {
            let daterangeVal = $("#reservation").val();
            const $downloadBtn = $("#downloadrekap");

            if (!daterangeVal) {
                $downloadBtn.prop("disabled", true);
                return alert("Tanggal tidak valid");
            }
            daterangeVal = daterangeVal.split("-").map(x => x.trim());
            const startDate = moment(daterangeVal[0], "DD/MM/YYYY").format("YYYY-MM-DD");
            const endDate = moment(daterangeVal[1], "DD/MM/YYYY").format("YYYY-MM-DD");

            $downloadBtn.attr("href", `@Url.Action("GenerateReport", "Home")?dateStart=${startDate}&dateEnd=${endDate}`);
        }

        const form = $("form#formAddProduk").on("submit", function (e) {
            e.preventDefault();
            const formData = {};
            const namaProduk = $("#formAddProduk input#namaProduk").val();
            const Harga = $("#formAddProduk input#Harga").val();
            const Qty = $("#formAddProduk input#Qty").val();
            formData.NamaProduk = namaProduk;
            formData.Harga = Harga;
            formData.Qty = Qty;
            console.log(formData);


			$.ajax({
				type: "POST",
				url: "@Url.Action("PostProduk", "Home")",
				data: formData,
				dataType: "json",
				success: function () {
					Swal.fire({
						icon: "success",
						title: "Sukses",
						text: "Data berhasil Ditambahkan",
					}).then(() => {
					});
				},
				error: function () {
					Swal.fire({
						icon: "error",
						title: "Gagal",
						text: "Data gagal Ditambahkan",
					});
				}
			});
		});

		function Delete(id) {
			const yakin = confirm("Anda yakin ??")
			if (!yakin) return;
			$.ajax({
				type: "POST",
				url: "@Url.Action("Delete", "Home")/" + id,
				dataType: "json",
				success: function (data) {
					if (!data) {
						return Swal.fire({
							icon: "success",
							title: "Sukses",
							text: "Data berhasil DiHapus",
						}).then(() => {

						});
					}
					else {
						Swal.fire({
							icon: "success",
							title: "Berhasil dihapus"
						})
					}

					location.reload();

				}
			})
		}
		 
		function inBond(id) {
			$("#formIn").data("id", id)
			$.ajax({
				type: "GET",
				url: "@Url.Action("GetById", "Home")/" + id,
				dataType: "json",
				success: function (data) {
					console.log(data)
					$("#formIn #namaProduk").val(data.inventoryItem.namaProduk);
					$("#formIn #Harga").val(data.inventoryItem.harga)
					$("#formIn #Qty").val(data.qty)
					$("#formIn #idin").val(id)
					$("#formIn #inventId").val(data.inventoryItemId)

				}
			});
		}
		@* in Produk *@
			$("#formIn").on('submit', function (event) {
				var id = $("#formIn #idin").val();
				var inventid = $("#formIn #inventId").val();

				event.preventDefault();
				let dateTimeString = $("#formIn #dateInBound").val();
				let dateTime = new Date(dateTimeString);
				// Pad single digits with leading zeros
				function padZero(value) {
					return value < 10 ? '0' + value : value;
				}

				let formattedDate = dateTime.getFullYear() + "-" +
					padZero(dateTime.getMonth() + 1) + "-" + // Months are zero-based, so add 1
					padZero(dateTime.getDate()) + " " +
					padZero(dateTime.getHours()) + ":" +
					padZero(dateTime.getMinutes()) + ":" +
					padZero(dateTime.getSeconds());

				const Transaksi = {
					Type: 1,
					QTY: $("#formIn #Qty").val(),
					inOutBoundDate: formattedDate,
					inventoryItemId: inventid,
						}
				console.log(Transaksi)
				$.ajax({
					url: "@Url.Action("PostTransaksi", "Home")",
					type: "POST",
					dataType: 'json',
					data: Transaksi,
					success: function () {
						Swal.fire({
							title: "Berhasil",
							text: 'InBound berhasil',
							icon: 'success'
						});
						location.reload();

					},
					error: function () {
						Swal.fire({
							title: "Gagal",
							text: 'InBound Gagal',
							icon: 'error '
						})

					}

				})
			})

		function outBond(id) {
			$("#formOut").data("id", id)
			$.ajax({
				type: "GET",
				url: "@Url.Action("GetById", "Home")/" + id,
				dataType: "json",
				success: function (data) {
					console.log(data)
					$("#formOut #namaProduk").val(data.inventoryItem.namaProduk);
					$("#formOut #Harga").val(data.inventoryItem.harga)
					$("#formOut #Qty").val(data.qty)
					$("#formOut #idout").val(id)
					$("#formOut #inventIdout").val(data.inventoryItemId)

				}
			});
		}
		@* in Produk *@
			$("#formOut").on('submit', function (event) {
				var id = $("#formOut #idout").val();
				var inventid = $("#formOut #inventIdout").val();

				event.preventDefault();
				let dateTimeString = $("#formOut #dateoutBound").val();
				let dateTime = new Date(dateTimeString);
				// Pad single digits with leading zeros
				function padZero(value) {
					return value < 10 ? '0' + value : value;
				}

				let formattedDate = dateTime.getFullYear() + "-" +
					padZero(dateTime.getMonth() + 1) + "-" + // Months are zero-based, so add 1
					padZero(dateTime.getDate()) + " " +
					padZero(dateTime.getHours()) + ":" +
					padZero(dateTime.getMinutes()) + ":" +
					padZero(dateTime.getSeconds());

				const Transaksi = {
					Type: 2,
					QTY: $("#formOut #Qty").val(),
					inOutBoundDate: formattedDate,
					inventoryItemId: inventid,
				}
				console.log(Transaksi)
				$.ajax({
					url: "@Url.Action("PostTransaksi", "Home")",
					type: "POST",
					dataType: 'json',
					data: Transaksi,
					success: function () {
						Swal.fire({
							title: "Berhasil",
							text: 'InBound berhasil',
							icon: 'success'
						});
						location.reload();

					},
					error: function () {
						Swal.fire({
							title: "Gagal",
							text: 'InBound Gagal',
							icon: 'error '
						})

					}

				})
			})
				</script>
}
